// val
int val_1 = 20;
int val_2 = 2, val_5 = 21 * 21 + 21,val_3[2] = {1, 2}, val_4[2][2] = {{1, 2}, {3, 4}};
// const
const int constVal_1 = 21;
const int constVal_2 = 2, constVal_5 = 21 * 21 + 21, constVal_3[2] = {1, 2}, constVal_4[2][2] = {{1, 2}, {3, 4}};

// no param void
void printID() {
    printf("21373272\n");
    return;
}

// no param int 
int printIDWithNum() {
    printf("21373272");
    return 21373272;
}

// one param
int addOne(int a) {
    return a + 1;
}

// two params
int add(int a, int b) {
    return a + b;
}

void loopFunc(int a, int b[], int c[][2])
{
    int i;
    for(i = 0; i < 10; i = i + 1)
    {
        printf("res%d: %d", i, b[i]);
        if(i >= 3)
        {
            break;
        }
        else 
        {
            continue;
        }
    }
    return;
}

void loopFunc2()
{
    int i = 0;
    for( ; ; ) break;
    for(i = 0; ; ) break;
    for( ; i < 10; ) break;
    for( ; ; i = i + 1) break;
    for(i = 0; i < 10; ) break;
    for(i = 0; ; i = i + 1) break;
    for( ; i < 10; i = i + 1) break;
    for(i = 0; i < 10; i = i + 1) break;
    return;
}

void voidFunc()
{

}

int paramFunc(int a[])
{
    int res = 0;
    int i = 0;
    for(i = 0; i <= 1; i = i + 1)
    {
        res = res + a[i];
    }
    return res;
}

int paramFunc2(int a, int b[])
{
    if(a != b[1])
    {
        return 0;
    }
    return b[0];
}

int main()
{
    int x = 1, y = 2, z = 3, a = 0;
    int softWare;
    int list[2][2] = {{21, 21}, {21, 21}};
    printf("21373272");
    printID();
    softWare = getint();
    520 - 1314 * 21;
    x = (21 + 12) * 21 / 21 % 21;
    list[1][1] = +1;
    printf("%d", x);
    printf("the answer is: %d\n", -z * 2 / 1 + 5);
    voidFunc();
    loopFunc(z, val_3, val_4);
    if(1 || !x)
    {
        if(0 * 21 == 21 && x != y || y > 1);
        else
        {
            softWare = softWare - paramFunc(val_3);
            softWare = softWare + paramFunc2(x, val_4[1]);
            softWare = softWare + paramFunc2(x, val_4[1])â–¶;
        }
    }
    return 0;
}
