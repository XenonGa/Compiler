@a = dso_local global i32 1
@_str_0 = dso_local constant [4 x i8] c"--1\00"
@_str_1 = dso_local constant [4 x i8] c"--2\00"
@_str_2 = dso_local constant [4 x i8] c"--3\00"

declare i32 @getint()

declare void @putint(i32)

declare void @putch(i32)

declare void @putstr(i8*)

define dso_local i32 @func(){
;<label>:0:
	store i32 2, i32* @a
	ret i32 1
}

define dso_local i32 @func2(){
;<label>:0:
	store i32 4, i32* @a
	ret i32 10
}

define dso_local i32 @func3(){
;<label>:0:
	store i32 3, i32* @a
	ret i32 0
}

define dso_local i32 @main(){
;<label>:0:
	%1 = icmp ne i32 0, 0
	br i1 %1, label %2, label %7

;<label>:2:
	%3 = load i32, i32* @a
	call void @putint(i32 %3)
	%4 = getelementptr inbounds [4 x i8], [4 x i8]* @_str_0, i32 0, i32 0
	call void @putstr(i8* %4)
	br label %5

;<label>:5:
	%6 = icmp ne i32 1, 0
	br i1 %6, label %16, label %21

;<label>:7:
	%8 = call i32 @func()
	%9 = icmp ne i32 %8, 0
	br i1 %9, label %13, label %10

;<label>:10:
	%11 = call i32 @func2()
	%12 = icmp ne i32 %11, 0
	br i1 %12, label %2, label %5

;<label>:13:
	%14 = call i32 @func3()
	%15 = icmp ne i32 %14, 0
	br i1 %15, label %2, label %10

;<label>:16:
	%17 = load i32, i32* @a
	call void @putint(i32 %17)
	%18 = getelementptr inbounds [4 x i8], [4 x i8]* @_str_1, i32 0, i32 0
	call void @putstr(i8* %18)
	br label %19

;<label>:19:
	%20 = icmp ne i32 0, 0
	br i1 %20, label %24, label %28

;<label>:21:
	%22 = call i32 @func3()
	%23 = icmp ne i32 %22, 0
	br i1 %23, label %16, label %19

;<label>:24:
	%25 = load i32, i32* @a
	call void @putint(i32 %25)
	%26 = getelementptr inbounds [4 x i8], [4 x i8]* @_str_2, i32 0, i32 0
	call void @putstr(i8* %26)
	br label %27

;<label>:27:
	ret i32 0

;<label>:28:
	%29 = call i32 @func3()
	%30 = icmp ne i32 %29, 0
	br i1 %30, label %24, label %31

;<label>:31:
	%32 = call i32 @func()
	%33 = call i32 @func2()
	%34 = icmp slt i32 %32, %33
	br i1 %34, label %24, label %27
}

