@u = dso_local global i32 0
@v = dso_local global i32 6
@s = dso_local global i32 9
@dim_2 = dso_local global [3 x [3 x i32]] zeroinitializer
@array = dso_local global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 2, i32 4]]
@_str_0 = dso_local constant [5 x i8] c"a = \00"
@_str_1 = dso_local constant [5 x i8] c"b = \00"
@_str_2 = dso_local constant [8 x i8] c"first: \00"
@_str_3 = dso_local constant [9 x i8] c"first : \00"
@_str_4 = dso_local constant [11 x i8] c" is not 2\0a\00"
@_str_5 = dso_local constant [6 x i8] c"xxxx\0a\00"

declare i32 @getint()

declare void @putint(i32)

declare void @putch(i32)

declare void @putstr(i8*)

define dso_local i32 @add_three(i32 %0, i32* %1, i32 %2){
;<label>:3:
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32*
	store i32* %1, i32** %5
	%6 = alloca i32
	store i32 %2, i32* %6
	%7 = load i32, i32* %4
	%8 = load i32*, i32** %5
	%9 = getelementptr i32, i32* %8, i32 0
	%10 = load i32, i32* %9
	%11 = add i32 %7, %10
	%12 = load i32, i32* %6
	%13 = add i32 %11, %12
	ret i32 %13
}

define dso_local i32 @add1(i32 %0, i32 %1){
;<label>:2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = alloca i32
	%6 = alloca i32
	store i32 3, i32* %6
	%7 = alloca i32
	store i32 3, i32* %7
	%8 = alloca i32
	store i32 9, i32* %8
	%9 = alloca i32
	store i32 12, i32* %9
	%10 = alloca i32
	store i32 22, i32* %10
	%11 = load i32, i32* %3
	%12 = load i32, i32* %4
	%13 = add i32 %11, %12
	store i32 %13, i32* %5
	%14 = load i32, i32* %3
	%15 = getelementptr inbounds [5 x i8], [5 x i8]* @_str_0, i32 0, i32 0
	call void @putstr(i8* %15)
	call void @putint(i32 %14)
	call void @putch(i32 10)
	%16 = load i32, i32* %4
	%17 = getelementptr inbounds [5 x i8], [5 x i8]* @_str_1, i32 0, i32 0
	call void @putstr(i8* %17)
	call void @putint(i32 %16)
	call void @putch(i32 10)
	%18 = load i32, i32* %5
	ret i32 %18
}

define dso_local i32 @addmmm(i32 %0, i32 %1, i32 %2){
;<label>:3:
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32
	store i32 %1, i32* %5
	%6 = alloca i32
	store i32 %2, i32* %6
	%7 = load i32, i32* %4
	%8 = load i32, i32* %5
	%9 = add i32 %7, %8
	%10 = load i32, i32* %6
	%11 = add i32 %9, %10
	ret i32 %11
}

define dso_local i32 @add(){
;<label>:0:
	ret i32 99
}

define dso_local void @printarrrr([2 x i32]* %0){
;<label>:1:
	%2 = alloca [2 x i32]*
	store [2 x i32]* %0, [2 x i32]** %2
	%3 = load [2 x i32]*, [2 x i32]** %2
	%4 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	%5 = load i32, i32* %4
	%6 = getelementptr inbounds [8 x i8], [8 x i8]* @_str_2, i32 0, i32 0
	call void @putstr(i8* %6)
	call void @putint(i32 %5)
	 ret void
}

define dso_local void @printarr(i32* %0, i32* %1){
;<label>:2:
	%3 = alloca i32*
	store i32* %0, i32** %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = load i32*, i32** %3
	%6 = getelementptr i32, i32* %5, i32 0
	%7 = load i32, i32* %6
	%8 = getelementptr inbounds [9 x i8], [9 x i8]* @_str_3, i32 0, i32 0
	call void @putstr(i8* %8)
	call void @putint(i32 %7)
	 ret void
}

define dso_local i32 @main(){
;<label>:0:
	%1 = alloca [7 x i32]
	%2 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	store i32 1, i32* %2
	%3 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 1
	store i32 2, i32* %3
	%4 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 2
	store i32 3, i32* %4
	%5 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 3
	store i32 4, i32* %5
	%6 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 4
	store i32 5, i32* %6
	%7 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 5
	store i32 7, i32* %7
	%8 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 6
	store i32 8, i32* %8
	%9 = alloca [2 x i32]
	%10 = getelementptr [2 x i32], [2 x i32]* %9, i32 0, i32 0
	store i32 2, i32* %10
	%11 = getelementptr [2 x i32], [2 x i32]* %9, i32 0, i32 1
	store i32 6, i32* %11
	%12 = alloca [1 x i32]
	%13 = getelementptr [1 x i32], [1 x i32]* %12, i32 0, i32 0
	store i32 1, i32* %13
	%14 = alloca [2 x [2 x i32]]
	%15 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %14, i32 0, i32 0, i32 0
	store i32 1, i32* %15
	%16 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %14, i32 0, i32 0, i32 1
	store i32 2, i32* %16
	%17 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	%18 = load i32, i32* %17
	%19 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %14, i32 0, i32 1, i32 0
	store i32 %18, i32* %19
	%20 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 1
	%21 = load i32, i32* %20
	%22 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %14, i32 0, i32 1, i32 1
	store i32 %21, i32* %22
	%23 = alloca i32
	store i32 1, i32* %23
	%24 = icmp ne i32 0, 0
	br i1 %24, label %86, label %27

;<label>:25:
	%26 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 1
	store i32 3, i32* %26
	br label %29

;<label>:27:
	%28 = icmp ne i32 1, 0
	br i1 %28, label %72, label %83

;<label>:29:
	%30 = srem i32 4, 3
	%31 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %30
	%32 = load i32, i32* %31
	%33 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 2
	%34 = load i32, i32* %33
	%35 = call i32 @add1(i32 %32, i32 %34)
	%36 = alloca i32
	%37 = alloca i32
	%38 = call i32 @getint()
	store i32 %38, i32* %36
	%39 = load i32, i32* %36
	%40 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @array, i32 0, i32 0, i32 1
	%41 = load i32, i32* %40
	%42 = call i32 @add1(i32 %39, i32 %41)
	%43 = load i32, i32* %36
	%44 = sub i32 0, %43
	%45 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @array, i32 0, i32 0, i32 1
	%46 = load i32, i32* %45
	%47 = call i32 @add1(i32 %44, i32 %46)
	%48 = load i32, i32* %36
	%49 = load i32, i32* %23
	%50 = call i32 @add1(i32 %48, i32 %49)
	%51 = call i32 @addmmm(i32 1, i32 2, i32 3)
	%52 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 3
	%53 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 3
	%54 = load i32, i32* %53
	%55 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 5
	%56 = load i32, i32* %55
	%57 = call i32 @add()
	%58 = mul i32 %56, %57
	%59 = sub i32 %54, %58
	store i32 %59, i32* %52
	%60 = alloca i32
	%61 = load i32, i32* %60
	%62 = sub i32 0, %61
	%63 = alloca i32
	store i32 %62, i32* %63
	%64 = call i32 @add()
	store i32 %64, i32* %60
	%65 = call i32 @add1(i32 1, i32 3)
	store i32 %65, i32* %60
	%66 = load i32, i32* %60
	%67 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	%68 = load i32, i32* %67
	%69 = add i32 %66, %68
	store i32 %69, i32* %60
	store i32 0, i32* %60
	%70 = load i32, i32* %60
	%71 = icmp eq i32 %70, 0
	br i1 %71, label %88, label %89

;<label>:72:
	%73 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	%74 = load i32, i32* %73
	%75 = add i32 %74, 99
	%76 = icmp slt i32 %75, 99
	br i1 %76, label %78, label %82

;<label>:77:
	br label %29

;<label>:78:
	%79 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 1
	%80 = call i32 @add()
	%81 = sdiv i32 99, %80
	store i32 %81, i32* %79
	br label %82

;<label>:82:
	br label %77

;<label>:83:
	%84 = load i32, i32* %23
	%85 = icmp eq i32 %84, 0
	br i1 %85, label %72, label %77

;<label>:86:
	%87 = icmp ne i32 1, 0
	br i1 %87, label %25, label %27

;<label>:88:
	br label %89

;<label>:89:
	br label %90

;<label>:90:
	%91 = icmp ne i32 1, 0
	br i1 %91, label %92, label %98

;<label>:92:
	%93 = load i32, i32* %60
	%94 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %93
	%95 = load i32, i32* %94
	%96 = icmp eq i32 %95, 2
	br i1 %96, label %114, label %108

;<label>:97:
	br label %90

;<label>:98:
	%99 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @array, i32 0, i32 0
	%100 = getelementptr [2 x i32], [2 x i32]* %99, i32 0, i32 0
	%101 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @array, i32 0, i32 1
	%102 = getelementptr [2 x i32], [2 x i32]* %101, i32 0, i32 0
	call void @printarr(i32* %100, i32* %102)
	%103 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @array, i32 0, i32 0
	call void @printarrrr([2 x i32]* %103)
	ret i32 0

;<label>:104:
	%105 = load i32, i32* %60
	%106 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %105
	%107 = load i32, i32* %106
	call void @putint(i32 %107)
	call void @putch(i32 10)
	br label %109

;<label>:108:
	br label %109

;<label>:109:
	%110 = load i32, i32* %60
	%111 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %110
	%112 = load i32, i32* %111
	%113 = icmp ne i32 %112, 2
	br i1 %113, label %118, label %123

;<label>:114:
	%115 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	%116 = load i32, i32* %115
	%117 = icmp sgt i32 %116, 0
	br i1 %117, label %104, label %108

;<label>:118:
	%119 = load i32, i32* %60
	%120 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %119
	%121 = load i32, i32* %120
	call void @putint(i32 %121)
	%122 = getelementptr inbounds [11 x i8], [11 x i8]* @_str_4, i32 0, i32 0
	call void @putstr(i8* %122)
	br label %123

;<label>:123:
	%124 = getelementptr inbounds [6 x i8], [6 x i8]* @_str_5, i32 0, i32 0
	call void @putstr(i8* %124)
	%125 = load i32, i32* %60
	%126 = add i32 %125, 1
	store i32 %126, i32* %60
	%127 = load i32, i32* %60
	%128 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %127
	%129 = load i32, i32* %128
	%130 = sub i32 0, %129
	%131 = icmp sge i32 %130, 0
	br i1 %131, label %132, label %141

;<label>:132:
	%133 = load i32, i32* %60
	%134 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %133
	%135 = load i32, i32* %60
	%136 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 %135
	%137 = load i32, i32* %136
	%138 = mul i32 %137, 3
	store i32 %138, i32* %134
	br label %98

;<label>:139:
	br label %97

;<label>:140:
	br label %97

;<label>:141:
	%142 = getelementptr [7 x i32], [7 x i32]* %1, i32 0, i32 0
	%143 = load i32, i32* %142
	%144 = icmp sle i32 %143, 0
	br i1 %144, label %145, label %139

;<label>:145:
	%146 = icmp ne i32 1, 0
	br i1 %146, label %132, label %139
}

